#!/usr/bin/python

modifiers = ('grave', 'acute', 'circumflex', 'tilde', 'diaeresis',
             'ring', 'cedilla', 'ogonek', 'stroke', 'caron', 'abovedot', 
             'breve', 'doubleacute', 'macron', 'slash', '')

def eiffelize (name):
    result = ''
    # special case for letters
    if name[0].isupper() and name[1:] in modifiers:
        return 'capital_%s' % name.lower()
    elif name[:5]=='kana_' and name[5:].isupper():
        return 'capital_%s' % name.lower()
    elif name[:8]=='Serbian_' and name[8:].isupper():
        return 'capital_%s' % name.lower()
    elif name[:10]=='Macedonia_' and name[10:].isupper():
        return 'capital_%s' % name.lower()
    elif name[:9]=='Cyrillic_' and name[9:].isupper():
        return 'capital_%s' % name.lower()
    elif name[:10]=='Ukrainian_' and name[10:].isupper():
        return 'capital_%s' % name.lower()
    elif name[:9]=='Ukranian_' and name[9:].isupper():
        return 'capital_%s' % name.lower()
    elif name[:6]=='Greek_' and name[6:].isupper():
        return 'capital_%s' % name.lower()
    elif name[:6]=='Greek_' and name[-6:]=='accent' and name[6:-6].isupper():
        return 'capital_%s' % name.lower()
    elif name[:6]=='Greek_' and name[-8:]=='dieresis' and name[6:-8].isupper():
        return 'capital_%s' % name.lower()
    elif name in ('ETH', 'THORN', 'AE', 'ENG', 'OE', 'Byelorussian_SHORTU'):
        return 'capital_%s' % name.lower()
    # unCamelCase
    last = ''
    for c in name:
        if c.isupper():
            if not result or result[-1]=='_' or last.isupper():
                result += c.lower()
            else:
                result += '_'+c.lower()
        else:
            result += c
        last = c
    return result

f = open('/usr/include/gtk-2.0/gdk/gdkkeysyms.h')
out = open ('gdk_key_symbols.e', 'w')
out.write ("""indexing
    autogenerated: "keysyms.py"

class GDK_KEY_SYMBOLS

feature -- Constants
""")
for l in f.readlines():
    if l.startswith('#define GDK_'):
        define, symbol, value = l.split()
        if symbol[4:] in ('Eth', 'Thorn'): continue # skip these
        try:
            out.write("\tgdk_%s: INTEGER is %s\n" % (eiffelize(symbol[4:]), int(value, 16)))
        except: pass # Ignore name aliases
out.write ("end\n")

