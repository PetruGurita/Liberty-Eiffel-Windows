system "gtk-eiffel-doc"

root GTK_EIFFEL_DOC: main

default -- section of the system
	assertion (all); 
	-- Choose the appropriate value: boost, no, require, ensure, invariant, loop, check, all.
	assertion_flat_check (no);
	debug (yes);
	trace (no);
	collect (yes);
	no_style_warning (no);
	no_warning (no);
	verbose (no);
	manifest_string_trace (no);
	high_memory_compiler (yes);
	profile (no);
	relax (no);

cluster -- section
      stardard: "${path_lib}/loadpath.se"
	      default -- for the standard lib
         assertion (boost)
         debug (no);
         trace (no);
      end -- of standard lib

      smarteiffel: "${path_tools}loadpath.se"
	      default -- for the standard tools
         assertion (boost)
         debug (no);
         trace (no);
      end -- of standard tools

      gtk: "${eiffel_libraries}/eiffel-gtk/loadpath.se"
	      default -- for the standard tools
         assertion (all)
         debug (yes);
      end -- of standard tools

      gtk_eiffel_doc: "."
	      default -- for the standard tools
         assertion (all)
         debug (yes);
      end -- of standard tools


--    optional_cluster_name: "cluster_path_using_system_file_notation_here"
--       default -- at this cluster level
--          assertion (require)
--          debug (no);
--          trace (no);
--       option -- for this cluster
--          assertion (loop) : CLASS_NAME1, CLASS_NAME2;
--          assertion (all)  : CLASS_NAME3, CLASS_NAME4;
--          -- ...
--          debug (yes) : CLASS_NAME1, CLASS_NAME2, ...;
--          debug ("KEY") : CLASS_NAME1, CLASS_NAME2, ...;
--          -- ...
--          trace : CLASS_NAME1, CLASS_NAME2;
--          trace : CLASS_NAME3, CLASS_NAME4;
--          -- ...
--       end -- of one cluster

	-- Pull in SmartEiffel's standard library. Always put this last so 
	-- that you can override options for parts of the library.

	standard: "${path_lib}/loadpath.se"

external -- section for elements written in another language


generate -- section
	no_strip(no);
	no_split(no);
	clean(no);

	--c_mode: distcc;
	
	c_compiler_options : "$(pkg-config --cflags gtk+-2.0 gtk+-unix-print-2.0)"

	linker_options : "$(pkg-config --libs gtk+-2.0 gtk+-unix-print-2.0)"

end
